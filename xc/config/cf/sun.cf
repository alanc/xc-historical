XCOMM platform:  $XConsortium: sun.cf,v 1.112 94/03/28 21:04:18 matt Exp $

#ifdef SVR4
#ifdef i386Architecture
#define OSName            SunOS 5.1 x86
XCOMM operating system:  OSName
#define OSMajorVersion    5
#define OSMinorVersion    1
#define OSTeenyVersion    0
#else
#define OSName            SunOS 5.3
XCOMM operating system:  OSName
#define OSMajorVersion    5
#define OSMinorVersion    3
#define OSTeenyVersion    0
#endif
#else
#define OSName            SunOS 4.1.3
XCOMM operating system:  OSName
#define OSMajorVersion    4
#define OSMinorVersion    1
#define OSTeenyVersion    3
#endif

/*
 * If you say you have the unbundled Sun C compiler, we assume you have
 * version 2.0.x of the compiler unless you say otherwise.  If you have
 * version 3.0.x of the C compiler, define CCompilerMajorVersion as 3
 * in site.def
 */

#ifdef HasSunC
#ifndef CCompilerMajorVersion
#define CCompilerMajorVersion 2
#endif
#ifndef CcCmd
#define CcCmd /opt/SUNWspro/bin/cc
#endif
#endif

/*
 * If you say you have the Sun C++ compiler, we assume you have version 
 * 3.0.x of the compiler (the cfront-based version) unless you say otherwise.
 * If you have version 4.0.x of the C++ compiler (the one with exceptions)
 * define CplusplusCompilerMajorVersion as 4 in site.def
 */

#ifdef HasSunCplusplus
#ifndef CplusplusCompilerMajorVersion
#define CplusplusCompilerMajorVersion 3
#endif
#ifndef CplusplusCmd
#define CplusplusCmd /opt/SUNWspro/bin/CC
#endif
#endif


#if OSMajorVersion < 4 || (OSMajorVersion == 4 && OSMinorVersion < 1)
/* We do not guarantee this will work */
#define BootstrapCFlags   -DNOSTDHDRS
#define StandardDefines   -DNOSTDHDRS
#endif

#if OSMajorVersion == 4 
#if OSMinorVersion == 1
#define HasPoll           YES
#endif
#if OSMinorVersion > 1 || (OSMinorVersion == 1 && OSTeenyVersion > 1)
/* You ALSO need this if you have Sun ld patch 100170-06 or later to 4.1.1 */
#define SunPost411FCSLd	  YES
#endif
#endif

#define ServerExtraDefines AllocateLocalDefines
#define ServerOSDefines		-DDDXOSINIT

#if OSMajorVersion > 4
#define BootstrapCFlags	  -DSVR4
#ifdef i386Architecture
#define StandardDefines	  -Dsun -Di386 -DSVR4
#else
#define StandardDefines	  -Dsun -DSVR4
#endif
#if OSMinorVersion > 1
#define ThreadedX	  YES
#if defined(HasSunC) && CCompilerMajorVersion > 2
#define ThreadsCompileFlags -mt
#else
#define SystemMTDefines -D_REENTRANT
#define ThreadsLibraries -lthread
#endif
#if defined(HasSunCplusplus) && CplusplusCompilerMajorVersion > 3
#define ThreadsCplusplusCompileFlags -mt
#else
#define CplusplusSystemMTDefines -D_REENTRANT
#define ThreadsCplusplusLibraries -lthread
#endif
#endif 		/* OSMinorVersion > 1 */
#if OSMinorVersion == 2 || OSMinorVersion == 3
/* over-ride for broken thread stubs in libc -- fixed in 2.4 ??? */
#define ExtraLibraries    -lsocket -lnsl -L$(TOP)/util/misc -lthr_stubs
#endif
#define HasVFork          NO
#define InstKmemFlags	  -g sys -m 2755
#define ShLibIncludeFile <sunLib.tmpl>
/*
 * Set flags for position independent code before including sv4Lib.rules
 * if the compiler in use doesn't use standard SVR4 flags
 */
#if defined(HasSunC) || defined(HasCenterLineC)
#define PositionIndependentCFlags -Kpic
#endif
#if defined(HasSunCplusplus) || defined(HasCenterLineCplusplus)
#define PositionIndependentCplusplusFlags -Kpic
#endif
#include <svr4.cf>
#else
#define InstKmemFlags	  -g kmem -m 2755
#include <sunLib.rules>
#endif

#define HasNdbm		  YES
#define HasShm		  YES
#define HasSecureRPC	  YES
#define SetTtyGroup	  YES
#define HasPutenv	  YES
#ifndef i386Architecture
#define Xsun24Server	  YES
#define XsunServer	  YES		/* has color and mono support */
#define XsunMonoServer	  YES		/* monochrome only */
#endif
#ifndef BuildPexExt
#define BuildPexExt	  XsunServer
#endif

#if HasGcc
#if HasGcc2
#define OptimizedCDebugFlags -O2
#else
#define SharedLibraryCcCmd cc
#define ExtraLoadFlags -B/usr/bin/
#define AllocateLocalDefines /**/
#endif

.c.o:
	$(CC) -c $(CFLAGS) $*.c

#else

#define AllocateLocalDefines -DINCLUDE_ALLOCA_H

#ifdef Sun3Architecture
#define DefaultCCOptions -f68881 -pipe
#else
#if OSMajorVersion < 5
#define DefaultCCOptions -pipe
#else
#define DefaultCCOptions -Xc
#endif
#endif

#define PexCCOptions DefaultCCOptions

#endif

#if OSMajorVersion < 5
#define SharedAllocateLocalDefines -DINCLUDE_ALLOCA_H
#define LibraryCCOptions /* don't want special floating point */
#endif
