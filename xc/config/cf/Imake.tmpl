/**/###########################################################################
/**/# X Window System Makefile generated from template file Imake.tmpl
/**/# $XConsortium: Imake.tmpl,v 1.1 89/01/10 18:15:16 jim Exp $
/**/#
/**/# Do not change the body of the imake template file.  Server-specific
/**/# parameters may be set in the appropriate .macros file; site-specific
/**/# parameters (but shared by all servers) may be set in site.def.  If you
/**/# make any changes, you'll need to rebuild the makefiles using
/**/# "make World" (at best) or "make Makefile; make Makefiles" (at least) in
/**/# the top level directory.
/**/#
/**/# If your C preprocessor doesn't define any unique symbols, you'll need
/**/# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
/**/# "make Makefile", "make Makefiles", or "make World").
/**/#
/**/# If you absolutely can't get imake to work, you'll need to set the 
/**/# variables at the top of each Makefile as well as the dependencies at the
/**/# bottom (makedepend will do this automatically).
/**/#


#define	YES	1
#define NO	0


/*
 * Get system-specific macros files. If your cpp doesn't define any 
 * platform-specific symbols, you will have to add one the cpp_argv table 
 * in ../imake/imake.c and then rebuild imake with the appropriate 
 * BOOTSTRAPCFLAGS variable set.  Then, undefine the symbols so that 
 * Imakefiles will only use symbols defined here.  This makes adding platforms
 * that use the same hardware or operating system easier to sort out.
 */

#ifdef ibm032
#define MacroIncludeFile "rt.cf"
#define MacroFile rt.cf
#undef ibm032
#define RtArchitecture
#endif /* ibm032 */

#ifdef vax
#ifdef ultrix
#define MacroIncludeFile "vax-dec.cf"
#define MacroFile vax-dec.cf
#undef vax
#undef ultrix
#define UltrixArchitecture
#else
#define MacroIncludeFile "vax-bsd.cf"
#define MacroFile vax-bsd.cf
#undef vax
#endif
#define VaxArchitecture
#endif /* vax */

#ifdef sun
#define MacroIncludeFile "sun.cf"
#define MacroFile sun.cf
#undef sun
#define SunArchitecture
#endif /* sun */

#ifdef hpux
#define MacroIncludeFile "hp.cf"
#define MacroFile hp.cf
#undef hpux
#define HPArchitecture
#endif /* hpux */

#ifdef apollo
#define MacroIncludeFile "apollo.cf"
#define MacroFile apollo.cf
#undef apollo
#define ApolloArchitecture
#endif /* apollo */

#ifdef M4310
#define MacroIncludeFile "pegasus.cf"
#define MacroFile pegasus.cf
#undef M4310
#define PegasusArchitecture
#endif /* M4310 */

#ifdef M4330
#define MacroIncludeFile "m4330.cf"
#define MacroFile m4330.cf
#undef  M4330
#define M4330Architecture
#endif /* M4330 */

#ifdef macII
/* A/UX cpp has no unique symbol:  build imake with BOOTSTRAPCFLAGS=-DmacII */
#define MacroIncludeFile "macII.cf"
#define MacroFile macII.cf
#undef  macII
#define MacIIArchitecture
#endif /* macII */

#ifdef CRAY
#define MacroIncludeFile "cray.cf"
#define MacroFile cray.cf
#undef CRAY
#undef cray
#define CrayArchitecture
#endif /* CRAY */

#ifdef mips
#ifdef ultrix
#define MacroIncludeFile "mips-dec.cf"
#define MacroFile mips-dec.cf
#undef mips
#undef ultrix
#define UltrixArchitecture
#else
#if defined(SYSTYPE_SYSV) || defined(SYSTYPE_BSD)
#define MacroIncludeFile "mips-mips.cf"
#define MacroFile mips-mips.cf
#undef mips
#endif
#endif
#define MipsArchitecture
#endif /* mips */

#ifndef MacroIncludeFile
/**/# WARNING:  Imake.tmpl not configured; guessing at definitions!!!
/**/# This might mean that BOOTSTRAPCFLAGS wasn't set when building imake.
#define MacroIncludeFile "generic.cf"
#define MacroFile generic.cf
#endif

/*****************************************************************************
 *                                                                           *
 *                       DO NOT MODIFY BELOW THIS LINE                       *
 *                                                                           *
 *****************************************************************************/


/**/###########################################################################
/**/# platform-specific configuration parameters - edit MacroFile to change
#include MacroIncludeFile

/**/###########################################################################
/**/# site-specific configuration parameters - edit site.def to change
#include "site.def"

/**/###########################################################################
/**/# global configuration parameters - do not change
#include "global.def"



/**/###########################################################################
/**/# definitions common to all Makefiles - do not edit

               AR = ArCmd
  BOOTSTRAPCFLAGS = BootstripCFlags	/* set if cpp doesn't have uniq sym */
               CC = CcCmd
         COMPRESS = CompressCmd
              CPP = CppCmd
          INSTALL = InstallCmd
               LD = LdCmd
             LINT = LintCmd
      LINTLIBFLAG = LintLibFlag
         LINTOPTS = LintOpts
               LN = LnCmd
             MAKE = MakeCmd
               MV = MvCmd
               CP = CpCmd
           RANLIB = RanlibCmd
  RANLIBINSTFLAGS = RanlibInstFlags
               RM = RemoveCmd
  STD_CPP_DEFINES = StandardCppDefines
      STD_DEFINES = SpecialDefines
SYSLAST_LIBRARIES = SysLastLibraries
             TAGS = TagsCmd

            SHELL = BourneShell
#if ConstructMFLAGS
           MFLAGS = -$(MAKEFLAGS)
#endif

/*
 * This list must be reflected in the DIRS_TO_BUILD list in the top-level
 * Makefile.
 */
          DESTDIR = DestDir		/* root of install */
        USRLIBDIR = UsrLibDir		/* libraries */
           BINDIR = BinDir		/* programs */
           INCDIR = IncDir		/* header files */
           ADMDIR = AdmDir		/* server log files */
           LIBDIR = LibDir		/* rgb, XErrorDB, etc. */
       LINTLIBDIR = LintlibDir		/* lint libraries */
          FONTDIR = FontDir		/* font directories */
         XINITDIR = XinitDir		/* xinit config files */
           XDMDIR = XdmDir		/* xdm config files */
           UWMDIR = UwmDir		/* uwm config files */
           AWMDIR = AwmDir		/* awm config files */
           TWMDIR = TwmDir		/* twm config files */
          MANPATH = ManPath		/* top of manual page tree */
    MANSOURCEPATH = ManSourcePath	/* prefix for man page sources */
           MANDIR = ManDir		/* man pages for commands */
        LIBMANDIR = LibmanDir		/* man pages for library routines */
      XAPPLOADDIR = XAppLoadDir		/* application default resources */

     INSTBINFLAGS = InstBinFlags	/* install flags for programs */
     INSTUIDFLAGS = InstUidFlags	/* install flags for setuid programs */
     INSTLIBFLAGS = InstLibFlags	/* install flags for libraries */
     INSTINCFLAGS = InstIncFlags	/* install flags for headers */
     INSTMANFLAGS = InstManFlags	/* install flags for man pages */
     INSTAPPFLAGS = InstAppFlags	/* install flags for app defaults */
    INSTKMEMFLAGS = InstKmemFlags	/* install flags for /dev/kmem progs */
          FCFLAGS = FontCompilerFlags
      CDEBUGFLAGS = DefaultCDebugFlags

           CFLAGS = $(CDEBUGFLAGS) $(INCLUDES) $(STD_DEFINES) $(DEFINES)
        LINTFLAGS = $(LINTOPTS) $(INCLUDES) $(STD_DEFINES) $(DEFINES) -DLINT
          LDFLAGS = $(CDEBUGFLAGS) $(SYS_LIBRARIES) $(SYSAUX_LIBRARIES)

          PATHSEP = /
           DEPEND = $(DEPENDSRC)/makedepend
            IMAKE = $(IMAKESRC)/imake
              RGB = $(RGBSRC)/rgb
               FC = $(BDFTOSNFSRC)/bdftosnf
        MKFONTDIR = $(MKFONTDIRSRC)/mkfontdir
        MKDIRHIER = $(SCRIPTSSRC)/mkdirhier.sh

              TOP = TOPDIR
        CONFIGSRC = $(TOP)/conf
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
       SCRIPTSSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(UTILSRC)/imake
         IRULESRC = $(CONFIGSRC)
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
     MKFONTDIRSRC = $(FONTSRC)/mkfontdir
     EXTENSIONSRC = $(TOP)/extensions
     EXTENSIONLIB = $(EXTENSIONSRC)/lib/libXext.a
         XAUTHLIB = $(XAUTHSRC)/libXau.a
             XLIB = $(XLIBSRC)/libX11.a
           XMULIB = $(XMUSRC)/libXmu.a
          OLDXLIB = $(OLDXLIBSRC)/liboldX.a
         XTOOLLIB = $(TOOLKITSRC)/libXt.a
           XAWLIB = $(AWIDGETSRC)/libXaw.a
         LINTXLIB = $(XLIBSRC)/llib-lX11.ln
          LINTXMU = $(XMUSRC)/llib-lXmu.ln
        LINTXTOOL = $(TOOLKITSRC)/llib-lXt.ln
          LINTXAW = $(AWIDGETSRC)/llib-lXaw.ln
         INCLUDES = -I$(TOP)
        MACROFILE = MacroFile
     ICONFIGFILES = $(IRULESRC)/Imake.tmpl \
			$(IRULESRC)/$(MACROFILE) \
			$(IRULESRC)/site.def $(IRULESRC)/global.def
    IMAKE_DEFINES = /* leave blank, for command line use only */
        IMAKE_CMD = $(NEWTOP)$(IMAKE) -TImake.tmpl -I$(NEWTOP)$(IRULESRC) \
			-s Makefile $(IMAKE_DEFINES)
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a \
			.emacs_* tags TAGS make.log MakeOut

#include "Imake.rules"

/**/###########################################################################
/**/# start of Imakefile
#include INCLUDE_IMAKEFILE

/**/###########################################################################
/**/# Imake.tmpl common rules for all Makefiles - do not edit
/*
 * These need to be here so that rules in Imakefile occur first;  the blank
 * all is to make sure that an empty Imakefile doesn't default to make clean.
 */
emptyrule::

CleanTarget()
MakefileTarget()
TagsTarget()

#ifdef IHaveSubdirs

/**/###########################################################################
/**/# rules for building in SUBDIRS - do not edit

InstallSubdirs($(SUBDIRS))
InstallManSubdirs($(SUBDIRS))
CleanSubdirs($(SUBDIRS))
TagSubdirs($(SUBDIRS))
MakefileSubdirs($(SUBDIRS))

#else

/**/###########################################################################
/**/# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install done"

install.man::
	@echo "install.man done"

Makefiles::

#endif /* if subdirectory rules are needed */

/**/###########################################################################
/**/# dependencies generated by makedepend
