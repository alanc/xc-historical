.\" Copyright 1993 Massachusetts Institute of Technology
.\"
.\" Permission to use, copy, modify, distribute, and sell this software and
.\" its documentation for any purpose is hereby granted without fee, provided
.\" that the above copyright notice appear in all copies and that both that
.\" copyright notice and this permission notice appear in supporting
.\" documentation, and that the name of M.I.T. not be used in advertising or
.\" publicity pertaining to distribution of the software without specific,
.\" written prior permission.  M.I.T. makes no representations about the
.\" suitability of this software for any purpose.  It is provided "as is"
.\" without express or implied warranty.
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtAllocate-GC wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XtAllocateGC 3Xt "Release 6" "X Version 11" "XT FUNCTIONS"
.SH NAME
XtAllocateGC \- obtain a sharable GC with modifiable fields
.SH SYNTAX
GC XtAllocateGC(\fIw\fP, \fIdepth\fP, \fIvalue_mask\fP, \fIvalues\fP, \
\fIdynamic_mask\fP, \fIunused_mask\fP)
.br
      Widget \fIw\fP;
.br
      Cardinal \fIdepth\fP;
.br
      XtGCMask \fIvalue_mask\fP;
.br
      XGCValues *\fIvalues\fP;
.br
      XtGCMask \fIdynamic_mask\fP;
.br
      XtGCMask \fIunused_mask\fP;
.SH ARGUMENTS
.IP \fIvalues\fP 1i
Specifies the actual values for this GC.
.ds Vm fields of the values are specified
.IP \fIvalue_mask\fP 1i
Specifies which \*(Vm.
.IP \fIw\fP 1i
Specifies the widget.
.IP \fIdepth\fP 1i
Specifies the depth for which the returned GC is valid, or 0.
.IP  \fIdynamic_mask\fP 1i
Specifies the fields of the GC that may be modified by the caller.
.IP  \fIunused_mask\fP 1i
Specifies the fields of the GC that will not be used by the caller.
.SH DESCRIPTION
The
.ZN XtAllocateGC
function returns a sharable GC that may be modified by the client.
The \fIscreen\fP field of the specified widget or of the nearest
widget ancestor of the specified object and the specified \fIdepth\fP
argument supply the root and drawable depths for which the GC is to
be valid. If \fIdepth\fP is zero the depth is taken from the \fIdepth\fP
field of the specified widget or of the nearest widget ancestor of the
specified object.
.LP
The \fIvalue_mask\fP argument specifies the fields of the GC that will
be initialized with the respective members of the \fIvalues\fP structure.
The \fIdynamic_mask\fP argument specifies fields that the caller intends
to modify during program execution. The caller must ensure that the
corresponding GC field is sdet prior to each use of the GC. The
\fIunused_mask\fP argument specifies fields of the GC that are of no
interest to the caller. The caller may make no assumptions about the
contents of any fields specified in \fIunused_mask\fP. The caller may
assume that at all times all fields not specified in either
\fIdynamic_mask\fP or \fIunused_mask\fP have their default value if
not specified in \fIvalue_mask\fP or the value specified by \fIvalues\fP.
If a field is specified in both \fIvalue_mask\fP and \fPdynamic_mask\fP,
the effect is as if it were specified only in \fIdynamic_mask\fP and
then immediately set to the value in \fIvalues\fP. If a field is set
in \fIunused_mask\fP and also in either \fIvalue_mask\fP or
\fIdynamic_mask\fP, the specification in \fIunused_mask\fP is ignored.
.LP
.ZN XtAllocateGC
tries to minimize the number of unique GCs created by comparing the
arguments with those of previous calls and returning an existing GC
when there are no conflicts.
.ZN XtAllocateGC
may modify and return an existing GC if it was allocated with a nonzero
\fIunused_mask\fP.
.SH "SEE ALSO"
.ZN XtGetGC
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
