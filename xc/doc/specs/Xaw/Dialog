.NH 2
Dialog Widget
.LP
.XS
\*(SN Dialog Widget
.XE
.IN "Dialog widget" "" "@DEF@"
.Ds 0
.TA 2.0i
.ta 2.0i
.sp
Header file	Dialog.h
Class		dialogWidgetClass
Class Name	Dialog
Superclass	Form Widget
.sp
.De
.LP
The Dialog widget implements a commonly used interaction semantic to
prompt for auxiliary input from a user.  For example, you can use a
Dialog widget when an application requires a small piece of
information, such as a filename, from the user.  A Dialog widget is
simply a special case of the Form widget that provides a convenient
way to create a preconfigured form.
.LP
The typical Dialog widget contains three areas.  The first line
contains a description of the function of the Dialog widget, for
example, the string \fIFilename:\fP.  The second line contains an area
into which the user types input.  The third line can contain buttons
that let the user confirm or cancel the Dialog input.
.NH 3
Resources
.LP
When creating a Dialog widget instance, the following resources are
retrieved from the argument list or the resource database:
.IN "Dialog widget" "resources"
.ps 9
.nr PS 9
.vs 11
.nr VS 11
.TS H
lw(1.5i) lw(1i) lw(1i) lw(2i).
_
.sp 3p
.TB
Name	Class	Type	Default Value
.sp 3p
_
.TH
.R
.sp 3p
accelerators	Acceleratore	AcceleratorTable	NULL
ancestorSensitive	AncestorSensitive	Boolean	True
background	Background	Pixel	XtDefaultBackground
backgroundPixmap	Pixmap	Pixmap	XtUnspecifiedPixmap
borderColor	BorderColor	Pixel	XtDefaultForeground
borderPixmap	Pixmap	Pixmap	XtUnspecifiedPixmap
borderWidth	BorderWidth	Dimension	1
children	ReadOnly	WidgetList	NULL
colormap	Colormap	Pointer	Parent's Colormap
defaultDistance	Thickness	Int	4
depth	Depth	int	Parent's Depth
destroyCallback	Callback	XtCallbackList	NULL
height	Height	Dimension	Enough space to contain all children
icon	Icon	Pixmap	None
insertPosition	InsertPosition	Function	NULL
label	Label	String	"label"
mappedWhenManaged	MappedWhenManaged	Boolean	True
numChildren	ReadOnly	Cardinal	0
screen	Screen	Pointer	Parent's Screen
sensitive	Sensitive	Boolean	True
translations	Translations	TranslationTable	NULL
value	Value	String	NULL (no value widget)
width	Width	Dimension	Enough space to contain all children
x	X	Position	0
y	Y	Position	0
.sp 3p
_
.TE
.ps 11
.nr PS 11
.vs 13
.nr VS 13
.IP accelerators 1.5i
A list of actions to be executed by this widget, even though the
event occurred in another widget.  See section 10.4 in the \fI\*(xT\fP.
.IP ancestorSensitive 1.5i
The sensitivity state of the ancestors of this widget.  A widget is
insensitive if either it or any of its ancestors is insensitive.
This resource is not settable with \fBXtSetValues\fP.  It may
however be queried.
.IP background 1.5i
The background color of this widget.
.IP backgroundPixmap 1.5i
The background pixmap of this widget.  If this resource is set to
anything other than \fBXtUnspecifiedPixmap\fP the pixmap specified will be
used instead of a background color.
.IP borderColor 1.5i
The color of this widget's border.
.IP borderPixmap 1.5i
The border pixmap of this widget.  If this resource is set to
anything other than \fBXtUnspecifiedPixmap\fP the pixmap specified will be
used instead of a background color.
.IP borderWidth 1.5i
This is the width of the border of this widget's window.
.IP children 1.5i
A list of all this composite widget'c current children.
.IP colormap 1.5i
The colormap that this widget will use to display all of its colors.
.IP defaultDistance 1.5i
The default internal spacing for the children for the box.  This is
the default value for the constraint resources \fBhorizDistnace\fP and
\fBvertDistance\fP.
.IP depth 1.5i
The depth of this widget's window.
.IP destroyCallback 1.5i
All callback functions on this list are called when this widget is destroyed.
.IP height 1.5i
.br
.ns
.IP width 1.5i
The height and width of this widget in pixels.
.IP \fBicon\fP 1.5i
A pixmap image to be displayed immediatly to the left of the 
Dialog widget's label.
.IP insertPosition 1.5i
[||| What is this resource anyway??? ]
.IP \fBlabel\fP 1.5i
A single line Latin1 string to be displayed at the top of the Dialog widget.
.IP mappedWhenManaged 1.5i
If this resource is \fBtrue\fP then the widget will automatically be
mapped by the Toolkit when it is realized and managed.
.IP numChildren 1.5i
The number of children in this composite widget.
.IP screen 1.5i
The screen that this widget is displayed on.  This is not a settable resource.
.IP sensitive 1.5i
Whether or not the toolkit will pass events to this widget.  The
widget will not get events if either \fBancestorSensitive\fP or 
\fBsensitive\fP is \fBfalse\fP.
.IP translations 1.5i
The translations associated with this widget.
.IP \fBvalue\fP 1.5i
An initial value for the string field that the user will enter text
into.  By default no text entry field is avaliable to the user.
Specifying an initiail value for \fBvalue\fP activates the text entry
field.  If string input is desired, but no initial value is to be
specifed then set this resource to "" (empty string).
.IP x 1.5i
.br
.ns
.IP y 1.5i
The location of the upper lefthand corner of this widget in its parent.
.NH 3
Constraint Resources
.LP
.IN "Dialog widget" "constraint resources"
Each child of the Dialog widget may request special layout resources
be applied to it.  These \fIconstraint\fP resources allow the Dialog
widget's children to specify individual layout requirements.
.LP
.ps 9
.nr PS 9
.vs 11
.nr VS 11
.TS H
lw(1.5i) lw(1i) lw(1i) lw(2i).
_
.sp 3p
.TB
Name	Class	Type	Default Value
.sp 3p
_
.TH
.R
.sp 3p
bottom	Edge	XawEdgeType	XawRubber
fromHoriz	Widget	Widget	NULL (left edge of Dialog)
fromVert	Widget	Widget 	NULL (top edge of Dialog)
horizDistance	Thickness	int	\fBdefaultDistance\fP resource
left	Edge	XawEdgeType	XawRubber
resizeable	Boolean	Boolean	FALSE
right	Edge	XawEdgeType	XawRubber
top	Edge	XawEdgeType	XawRubber
vertDistance	Thickness	int	\fBdefaultDistance\fP resource
.sp 3p
_
.TE
.ps 11
.nr PS 11
.vs 13
.nr VS 13
.IP bottom 1.5i
.br
.ns
.IP left 1.5i
.br
.ns
.IP right 1.5i
.br
.ns
.IP top 1.5i
What to do with this edge of the child when the Dialog is resized.  This
resource may be any \fBedgeType\fP.  See \fBLayout Semantics\fP for
details.
.IP fromHoriz 1.5i
.br
.ns
.IP fromVert 1.5i
Which widget this child should be placed underneath (or to the right
of).  If a value of NULL is specified then this widget will be right
next to the edge of the Dialog.
.IP horizDistance 1.5i
.br
.ns
.IP vertDistance 1.5i
The amount of space, in pixels, between this child and its left or
upper neighbor. 
.IP resizeable 1.5i
If this resource is \fBFalse\fP then the Dialog widget will ignore all
geometry request made by this child.  The Dialog may still resize this
child itself, however.
.NH 3
Layout Semantics
.LP
The Dialog widget uses two different sets of layout semantics.  One is
used when initially laying out the buttons.  The other is used when
the Dialog is resized. 
.LP
The first layout method uses the \fBfromVert\fP and \fPfromHoriz\fP
resources to place the children of the form.  A single pass is made
through the Dialog widget's children in the order that they were created.
Each child is then placed in the Dialog widget below or to the right of
the widget specified by the \fBfromVert\fP and \fBfromHoriz\fP resources.
The distance the new child is placed from its left or upper neighbor is
determined by the \fBhorizDistance\fP and \fBvertDistance\fP resources.
This implies some things about how the order of creation affects the 
possible placement of the children.  
.LP
The second layout method is used when the Dialog is resized, it does
not matter what causes this resize, and it is possible for a resize to
happen before the widget becomes visable (due to constraints imposed
by the parent of the Dialog widget).  This layout method uses the
\fBbottom\fP, \fBtop\fP, \fBleft\fP, and \fBright\fP resources.  These 
are used to determine what will happen the each edge of the child when
the Dialog is resized.  If value of \fBXawChain*\fP is specified the
the edge of the child will remain a fixed distance from the
\fIchain\fP edge of the form.  For example if \fBXawChainLeft\fP is
specified for the \fBright\fP rresource of a child then the right
edge of that child will remain a fixed distance from the left edge of
the Dialog widget.  If a value of \fBXawRubber\fP is specified, that
edge will grow by the same percentage that the Dialog grew.  For
instance if the Dialog grows by 50% the left edge of the child (if
specified as \fBXawRubber\fP will be 50% farther from the left edge of
the Dialog).  One must be very careful when specifying these
resources, for when they are specified incorrectly children may
overlap or completly occlude other children when the Dialog widget is
resized.
.LP
.ps 9
.nr PS 9
.vs 11
.nr VS 11
.TS H
lw(1.5i) lw(1i) lw(3i).
_
.sp 3p
.TB
Edge Type	Resource Name	Description
.sp 3p
_
.TH
.R
.sp 3p
XawChainBottom	ChainBottom	Edge remains a fixed distance from bottom of Dialog
XawChainLeft	ChainLeft	Edge remains a fixed distance from left of Dialog
XawChainRight	ChainRight	Edge remains a fixed distance from right of Dialog
XawChainTop	ChainTop	Edge remains a fixed distance from top of Dialog
XawRubber	Rubber	Edges will move a proportional distance
.sp 3p
_
.TE
.ps 11
.nr PS 11
.vs 13
.nr VS 13
NH 4
Example
.LP
If you wish to force the Dialog never resize any of its children
then set \fBleft\fP and \fBright\fP to \fBXawChainLeft\fP and
\fBtop\fP and \fBbottom\fP to \fBXawChainTop\fP.  This will cause all
the children to remain a fixed distance from the top and left
edges of the Dialog, and to never resize.
.NH 4
Special Considerations
.LP
The Dialog widget automatically sets the \fBtop\fP and \fBbottom\fP
resources for all Children that are subclasses of the Command widget,
as well 
as the widget children that are used to contain the \fBlabel\fP,
\fBvalue\fP, and \fBicon\fP.  This policy allows the buttons at the
bottom of the Dialog to interact correctly with the predefined children.
.LP
The Dialog will also set \fBfromLeft\fP to the last button in the
Dialog for each new button added to the Dialog widget.
.LP
The automatically added constraints cannot be overridden, as they are
policy decisions of the Dialog widget.  If a more flexable Dialog is
desired the application is free to use the Form widget to create its
own Dialog policy. 
.NH 3
Automatically Created Children.
.LP
The Dialog uses Label widget's to contain the \fBlabel\fP and
\fBicon\fP.  These widgets are named \fIlabel\fP and \fIicon\fP
respectivly.  The Dialog \fBvalue\fP is contained in an AsciiText
widget whos name is \fIvalue\fP.  Using \fBXtName\fP the application
can change the attributes of these widgets that are not avaliable
through the Dialog widget itself.
.LP
.NH 3
Convenience Routines
.LP
To return the character string in the text field, use
.PN XawDialogGetValueString .
.IN "XawDialogGetValueString" "" "@DEF@"
.FD 0
String XawDialogGetValueString(\fIw\fP)
.br
	Widget \fIw\fP;
.FN
.IP \fIw\fP 1i
Specifies the widget ID of the Dialog box.
.LP
This function returns the copy of the value string of the Dialog
widget.  This string is allocated by the AsciiText widget and will
remain valid and unchanged until another call to
\fBXawDialogGetValueString\fP or a \fBXtGetValues\fP call on the
\fBvalue\fP widget, when the string will be automatically freed.
.LP
.sp
To add a new button to the Dialog widget use
'fBXawDialogAddButton\fP.
.IN "XawDialogAddButton" "" "@DEF@"
.FD 0
void XawDialogAddButton(\fIw\fP, \fIname\fP, \fIfunc\fP, \fIclient_data\fP)
.br
	Widget \fIw\fP;
.br
	String \fIname\fP;
.br
	XtCallbackProc \fIfunc\fP;
.br
	XtPointer \fIclient_data\fP;
.FN
.IP \fIw\fP 1i
The widget ID of the Dialog box.
.IP \fIname\fP 1i
The name of the new Command button to be added to the Dialog.
.IP \fIfunc\fP 1i
The callback function to be called when this button is activated.  If
NULL is specified then no callback is added.
.IP \fIclient_data\fP 1i
The client_data to be passed to the Callback function.
.LP
