.NH 2
Form Widget
.LP
.XS
\*(SN Form Widget
.XE
.IN "Form widget" "" "@DEF@"
.Ds 0
.TA 2.0i
.ta 2.0i
.sp
Header file	Form.h
Class		formWidgetClass
Class Name	Form
Superclass	Constraint Widget
.sp
.De
.LP
The Form widget can contain an arbitrary number of children or
subwidgets.  The Form provides geometry management for its children,
which allows individual control of the position of each child.  Any
combination of children can be added to a Form.  The initial positions
of the children may be computed relative to the positions of other
children.  When the Form is resized, it computes new positions and
sizes for its children.  This computation is based upon information
provided when a child is added to the Form.
.LP
The default width of the Form is the minimum width needed to
enclose the children after computing their initial layout, with a
margin of \fBdefaultDistance\fP
at the right and bottom edges.  If a width and height is assigned
to the Form that is too small for the layout, the children will
be clipped by the right and bottom edges of the Form.
.LP
.sp
To force or defer a re-layout of the Form, use
.PN XawFormDoLayout .
.IN "Form widget" "re-layout"
.IN "XawFormDoLayout" "" "@DEF@"
.FD 0
void XawFormDoLayout(\fIw\fP, \fIdo_layout\fP)
.br
     Widget \fIw\fP;
.br
     Boolean \fIdo_layout\fP;
.FN
.IP \fIw\fP 1i
Specifies the Form widget.
.IP \fIdo_layout\fP 1i
Enables (if
.PN True )
or disables (if
.PN False )
layout of the Form widget.
.LP
When making several changes to the children of a Form widget
after the Form has been realized, it is a good idea to disable
re-layout until all changes have been made, then allow the
layout.  Form increments an internal count each time
.PN XawFormDoLayout
is called with do_layout
.PN False
and decrements the count when do_layout is
.PN True .
When the count reaches 0, Form performs a re-layout.

[ More form stuff to come... ]
