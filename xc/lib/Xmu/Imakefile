#include <Library.tmpl>

XCOMM
XCOMM This library contains miscellaneous utility routines and is not part
XCOMM of the Xlib standard.
XCOMM

/* Since people link in Xmu without Xt, we avoid references to string data. */
#if HasSharedLibraries
   SHAREDCODEDEF = SharedCodeDef -DXTSTRINGDEFINES
#endif
   INSTALLFLAGS = $(INSTINCFLAGS)
       LINTLIBS = $(LINTXLIB) 

#ifdef OsNameDefines
OS_NAME_DEFINES = OsNameDefines
#endif
        CSSDEFS = $(OS_NAME_DEFINES) ConnectionFlags
        BITDEFS = -DBITMAPDIR=\"$(INCDIR)/bitmaps\"

HEADERS = \
	Xmu.h \
	Atoms.h \
	CharSet.h \
	CloseHook.h \
	Converters.h \
	CurUtil.h \
	CvtCache.h \
	DisplayQue.h \
	Drawing.h \
	Editres.h \
	Error.h \
	Initer.h \
	Misc.h \
	StdSel.h \
	StdCmap.h \
	SysUtil.h \
	WidgetNode.h \
	WinUtil.h \
	Xct.h


SRCS = \
	AllCmap.c \
	Atoms.c \
	ClientWin.c \
	CloseHook.c \
	CmapAlloc.c \
	CrCmap.c \
	CrPixFBit.c \
	CursorName.c \
	CvtCache.c \
	CvtStdSel.c \
	DefErrMsg.c \
	DelCmap.c \
	DisplayQue.c \
	Distinct.c \
	DrawLogo.c \
	DrRndRect.c \
	EditresCom.c \
	FToCback.c \
	GetHost.c \
	GrayPixmap.c \
	Initer.c \
	LocBitmap.c \
	Lookup.c \
	LookupCmap.c \
	Lower.c \
	RdBitF.c \
	ScrOfWin.c \
	ShapeWidg.c \
	StdCmap.c \
	StrToBS.c \
	StrToBmap.c \
	StrToCurs.c \
	StrToFont.c \
	StrToGrav.c \
	StrToJust.c \
	StrToLong.c \
	StrToOrnt.c \
	StrToShap.c \
	StrToWidg.c \
	UpdMapHint.c \
	VisCmap.c \
	WidgetNode.c \
	Xct.c \
	sharedlib.c 

OBJS = \
	AllCmap.o \
	Atoms.o \
	ClientWin.o \
	CloseHook.o \
	CmapAlloc.o \
	CrCmap.o \
	CrPixFBit.o \
	CursorName.o \
	CvtCache.o \
	CvtStdSel.o \
	DefErrMsg.o \
	DelCmap.o \
	DisplayQue.o \
	Distinct.o \
	DrawLogo.o \
	DrRndRect.o \
	EditresCom.o \
	FToCback.o \
	GetHost.o \
	GrayPixmap.o \
	Initer.o \
	LocBitmap.o \
	Lookup.o \
	LookupCmap.o \
	Lower.o \
	RdBitF.o \
	ScrOfWin.o \
	ShapeWidg.o \
	StdCmap.o \
	StrToBS.o \
	StrToBmap.o \
	StrToCurs.o \
	StrToFont.o \
	StrToGrav.o \
	StrToJust.o \
	StrToLong.o \
	StrToOrnt.o \
	StrToShap.o \
	StrToWidg.o \
	UpdMapHint.o \
	VisCmap.o \
	WidgetNode.o \
	Xct.o

UNSHAREDOBJS = sharedlib.o

all::

#if SharedLibXmu
# if DebugLibXmu
SharedAndDebuggedLibraryObjectRule()
SpecialSharedAndDebuggedObjectRule(CvtStdSel.o,$(ICONFIGFILES),$(CSSDEFS))
SpecialSharedAndDebuggedObjectRule(LocBitmap.o,$(ICONFIGFILES),$(BITDEFS))
# else
SharedLibraryObjectRule()
SpecialSharedObjectRule(CvtStdSel.o,$(ICONFIGFILES),$(CSSDEFS))
SpecialSharedObjectRule(LocBitmap.o,$(ICONFIGFILES),$(BITDEFS))
# endif
#else
# if DebugLibXmu && ProfileLibXmu
DebuggedAndProfiledLibraryObjectRule()
SpecialDebuggedAndProfiledObjectRule(CvtStdSel.o,$(ICONFIGFILES),$(CSSDEFS))
SpecialDebuggedAndProfiledObjectRule(LocBitmap.o,$(ICONFIGFILES),$(BITDEFS))
# else
#  if DebugLibXmu 
DebuggedLibraryObjectRule()
SpecialDebuggedObjectRule(CvtStdSel.o,$(ICONFIGFILES),$(CSSDEFS))
SpecialDebuggedObjectRule(LocBitmap.o,$(ICONFIGFILES),$(BITDEFS))
#  else
#   if ProfileLibXmu
ProfiledLibraryObjectRule()
SpecialProfiledObjectRule(CvtStdSel.o,$(ICONFIGFILES),$(CSSDEFS))
SpecialProfiledObjectRule(LocBitmap.o,$(ICONFIGFILES),$(BITDEFS))
#   else
NormalLibraryObjectRule()
SpecialObjectRule(CvtStdSel.o,$(ICONFIGFILES),$(CSSDEFS))
SpecialObjectRule(LocBitmap.o,$(ICONFIGFILES),$(BITDEFS))
#   endif
#  endif
# endif
#endif

#if SharedLibXmu
NormalSharedLibraryTarget(Xmu,$(SOXMUREV),$(OBJS))

SpecialSharedObjectRule(sharedlib.o,,-I$(TOOLKITSRC))
depend:: xtsharedlib.c
xtsharedlib.c: $(TOOLKITSRC)/sharedlib.c
	$(RM) $@
	$(LN) $? $@

NormalSharedLibraryDataTarget(Xmu,$(SOXMUREV),$(UNSHAREDOBJS))
InstallSharedLibrary(Xmu,$(SOXMUREV),$(USRLIBDIR))
InstallSharedLibraryData(Xmu,$(SOXMUREV),$(USRLIBDIR))
#endif


NormalLibraryTarget(Xmu,$(OBJS))
LintLibraryTarget(Xmu,$(SRCS))
InstallLibrary(Xmu,$(USRLIBDIR))
InstallLintLibrary(Xmu,$(LINTLIBDIR))

#if ProfileLibXmu 
ProfiledLibraryTarget(Xmu,$(OBJS))
InstallLibrary(Xmu_p,$(USRLIBDIR))
#endif

#if DebugLibXmu
DebuggedLibraryTarget(Xmu,$(OBJS))
#endif

BuildIncludes($(HEADERS),Xmu,..)

MakeDirectories(install,$(INCDIR)/Xmu)

InstallMultiple($(HEADERS),$(INCDIR)/Xmu)

DependTarget()

NormalLintTarget($(SRCS))

